{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nlet userSelectedDate;\nlet startButton = document.querySelector(\"button\");\nlet timeInterval; \nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        userSelectedDate = selectedDates[0];\n        const currentDate = new Date();\n        if (selectedDates[0] <= currentDate) {\n            iziToast.error({\n                title: 'Error',\n                message: 'Please choose a date in the future',\n            });\n            startButton.disabled = true;\n        }else { \n            startButton.disabled = false;\n        }\n    },\n};\n\nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n    return value < 10 ? `0${value}` : value;\n}\n\nflatpickr(\"#datetime-picker\", options);\n\nstartButton.addEventListener('click', event => {\n    event.preventDefault(); \n\n    timeInterval = setInterval(() => {\n        const remainingTime = userSelectedDate - new Date();\n\n        if (remainingTime <= 0) {\n            clearInterval(timeInterval);\n            iziToast.success({\n                title: 'Countdown Finished',\n                message: 'The countdown has finished!',\n            });\n            startButton.disabled = true;\n        } else {\n            const { days, hours, minutes, seconds } = convertMs(remainingTime);\n            document.querySelector(\"[data-days]\").textContent = addLeadingZero(days); \n            document.querySelector(\"[data-hours]\").textContent = addLeadingZero(hours);\n            document.querySelector(\"[data-minutes]\").textContent = addLeadingZero(minutes);\n            document.querySelector(\"[data-seconds]\").textContent = addLeadingZero(seconds);\n        }\n    }, 1000);\n\n    startButton.disabled = true; \n});\n"],"names":["userSelectedDate","startButton","timeInterval","options","selectedDates","currentDate","iziToast","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","flatpickr","event","remainingTime"],"mappings":"sFAKA,IAAIA,EACAC,EAAc,SAAS,cAAc,QAAQ,EAC7CC,EACJ,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnBJ,EAAmBI,EAAc,CAAC,EAClC,MAAMC,EAAc,IAAI,KACpBD,EAAc,CAAC,GAAKC,GACpBC,EAAS,MAAM,CACX,MAAO,QACP,QAAS,oCACzB,CAAa,EACDL,EAAY,SAAW,IAEvBA,EAAY,SAAW,EAE9B,CACL,EAEA,SAASM,EAAUC,EAAI,CAMnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAEA,SAASC,EAAeC,EAAO,CAC3B,OAAOA,EAAQ,GAAK,IAAIA,CAAK,GAAKA,CACtC,CAEAC,EAAU,mBAAoBZ,CAAO,EAErCF,EAAY,iBAAiB,QAASe,GAAS,CAC3CA,EAAM,eAAc,EAEpBd,EAAe,YAAY,IAAM,CAC7B,MAAMe,EAAgBjB,EAAmB,IAAI,KAE7C,GAAIiB,GAAiB,EACjB,cAAcf,CAAY,EAC1BI,EAAS,QAAQ,CACb,MAAO,qBACP,QAAS,6BACzB,CAAa,EACDL,EAAY,SAAW,OACpB,CACH,KAAM,CAAE,KAAAQ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUU,CAAa,EACjE,SAAS,cAAc,aAAa,EAAE,YAAcJ,EAAeJ,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcI,EAAeH,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcG,EAAeF,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcE,EAAeD,CAAO,CAChF,CACJ,EAAE,GAAI,EAEPX,EAAY,SAAW,EAC3B,CAAC"}